{"version":3,"sources":["events.js","components/ChatsPage/Sidebar.js","components/ChatsPage/MessageHeader.js","components/ChatsPage/MessagesBody.js","components/ChatsPage/MessageInput.js","components/ChatsPage/ChatPage.js","components/LoginPage/LoginButton.js","components/LoginPage/LogoutButton.js","components/LoginPage/AuthenticationButton.js","components/LoginPage/LoginPage.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IS_USER","NEW_USER","INIT_CHATS","LOGOUT","MESSAGE_SEND","TYPING","P_MESSAGE_SEND","P_TYPING","CHECK_CHANNEL","CREATE_CHANNEL","Sidebar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","modal","channelName","channelDescription","error","displayChannels","chats","map","chat","react_default","a","createElement","Menu","Item","key","name","onClick","props","setActiveChannel","active","activeChannel","msgCount","Label","size","color","displayUsers","users","_this$props","user","setActivePChannel","pChats","nickname","assign","You...","keys","pChat","filter","pchat","toUpperCase","slice","react_dots_loader_lib_default","style","marginLeft","distance","visible","isTyping","openModal","setState","closeModal","handleChange","e","defineProperty","target","value","isFormValid","_ref","handleSubmit","_this$state","socket","emit","events","checkChannel","isChannel","inherits","createClass","_this$props2","logout","_this$state2","Fragment","background","paddingTop","vertical","inverted","fluid","stackable","Header","as","Icon","Content","Subheader","paddingLeft","fontSize","Button","icon","labelPosition","Modal","open","content","Form","Field","Input","placeholder","onChange","Message","Actions","Component","MessageHeader","console","log","JSON","stringify","Segment","description","MessagesBody","scrollDown","b","contaniner","refs","scrollTop","scrollHeight","messages","typingUser","height","ref","overflowY","minHeight","display","flexDirection","justifyContent","padding","paddingRight","message","Card","id","marginTop","textAlign","sender","moment","timef","fromNow","className","MessageInput","msg","sendMsg","handleOnFocused","sendTyping","handleOnBlur","onSubmit","onFocus","onBlur","link","circular","disabled","ChatPage","initChats","_chats","updateChats","init","undefined","newChats","toConsumableArray","addTyping","channel","includes","push","u","addPTyping","_ref2","addMessage","_ref3","addPMessage","_ref4","type","receiver","socketId","newActive","on","_this$props3","Grid","margin","Column","computer","tablet","mobile","ChatsPage_Sidebar","ChatsPage_MessageHeader","ChatsPage_MessagesBody","ChatsPage_MessageInput","styles","appButtonContainer","elevation","borderRadius","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","paddingVertical","appButtonText","fontWeight","alignSelf","LoginButton","loginWithRedirect","useAuth0","objectSpread","backgroundColor","paddingHorizontal","LogoutButton","returnTo","window","location","origin","AuthenticationButton","isAuthenticated","LoginPage_LogoutButton","LoginPage_LoginButton","LoginPage","setUser","isUser","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","auth0","sent","event","stop","verticalAlign","LoginPage_AuthenticationButton","withAuth0","socketUrl","Main","initSocket","io","setUsers","isNewUsers","newUsers","outUser","newPChats","oldPChats","newUser","ChatsPage_ChatPage","components_LoginPage_LoginPage","App","components_Main","Boolean","hostname","match","ReactDOM","render","auth0_react_esm","domain","clientId","redirectUri","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e02c7ac.chunk.js","sourcesContent":["module.exports = {\n    IS_USER:\"IS_USER\",\n    NEW_USER:\"NEW_USER\",\n    INIT_CHATS:\"INIT_CHATS\",\n    LOGOUT:\"LOGOUT\",\n    MESSAGE_SEND:\"MESSAGE_SEND\",\n    TYPING:\"TYPING\", \n    P_MESSAGE_SEND:\"P_MESSAGE_SEND\",\n    P_TYPING:\"P_TYPING\",\n    CHECK_CHANNEL:\"CHECK_CHANNEL\",\n    CREATE_CHANNEL:\"CREATE_CHANNEL\"\n}","import React, { Component } from 'react'\nimport events from '../../events'\nimport { Menu, Header, Icon, Button, Label, Modal, Form, Input, Message } from 'semantic-ui-react'\nimport Loader from 'react-dots-loader'\nimport 'react-dots-loader/index.css'\n\nexport class Sidebar extends Component {\n\n  state = {\n    modal: false,\n    channelName: '',\n    channelDescription: '',\n    error: null\n  }\n\n  displayChannels = chats => (\n    chats.map(chat => (\n      <Menu.Item\n        key={chat.name}\n        onClick={() => this.props.setActiveChannel(chat.name)}\n        active={this.props.activeChannel.name === chat.name}\n      >\n        # {chat.name}\n        {chat.msgCount > 0 && <Label size='mini' color='red'> {chat.msgCount} </Label>}\n      </Menu.Item>\n    ))\n  )\n\n  displayUsers = users => {\n    let { user, setActivePChannel, pChats, activeChannel } = this.props\n    delete users[user.nickname]\n    users = Object.assign({ 'You...': user }, users)\n    return Object.keys(users).map(user => {\n      let pChat = pChats.filter(pchat => pchat.name === user)\n      let msgCount = null\n      if (pChat[0] && pChat[0].name !== activeChannel.name) {\n        if (pChat[0].msgCount > 0) {\n          msgCount = pChat[0].msgCount\n        }\n      }\n      return (\n        <Menu.Item\n          key={user}\n          onClick={(user === 'You...') ? null : () => setActivePChannel(user)}\n          active={this.props.activeChannel.name === user}\n        >\n          # {user[0].toUpperCase() + user.slice(1)}\n          <Loader\n            style={{ marginLeft: '10px' }}\n            size={4} color='grey' distance={3}\n            visible={pChat[0] ? pChat[0].isTyping : false} />\n          {msgCount && <Label size='mini' color='red'> {msgCount} </Label>}\n        </Menu.Item>\n      )\n    })\n  }\n\n  openModal = () => this.setState({ modal: true })\n\n  closeModal = () => this.setState({ modal: false, channelName: '', channelDescription: '', error: null })\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  isFormValid = ({ channelDescription, channelName }) => {\n    if (channelDescription && channelName) {\n      this.setState({ error: null })\n      return true\n    } else {\n      this.setState({ error: 'Both Name and Description are require ' })\n      return false\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ error: null })\n    let { channelDescription, channelName } = this.state\n    if (this.isFormValid(this.state)) {\n      let { socket } = this.props\n      socket.emit(events.CHECK_CHANNEL, { channelName, channelDescription }, this.checkChannel)\n    }\n  }\n\n  checkChannel = isChannel => {\n    isChannel ? this.setState({ error: `Channel \"${ this.state.channelName }\" name alredy take` }) :\n    this.closeModal()\n  }\n\n  render() {\n    let { user, users, chats, logout } = this.props\n    let { modal, error } = this.state\n    return (\n      <React.Fragment>\n        <Menu\n          style={{ background: '#1E1E1E', paddingTop: '2em' }}\n          vertical\n          inverted\n          fluid\n          stackable\n          size='large'\n        >\n\n          <Header inverted as='h3'>\n            <Icon name='chat' />\n            <Header.Content> Staidr </Header.Content>\n            <Header.Subheader>\n              Login as : {user.nickname.slice(0,1).toUpperCase() + user.nickname.slice(1)}\n            </Header.Subheader>\n          </Header>\n          <Menu.Menu>\n            <Menu.Item style={{ paddingLeft: '0' }}>\n              <span style={{ fontSize: '1.8em',color:'#FFF6F6' }}>\n                <Icon name='rocketchat' /> Channel lists\n              </span>\n              <Icon name='add' onClick={this.openModal} />\n            </Menu.Item>\n            {chats[0] && this.displayChannels(chats)}\n          </Menu.Menu>\n          <br />\n          <Menu.Menu>\n            <Menu.Item style={{ paddingLeft: '0' }}>\n              <span style={{ fontSize: '1.2em' }}>\n                <Icon name='address book' /> Online Users\n              </span>\n            </Menu.Item>\n            {(users && chats[0]) && this.displayUsers(users)}\n          </Menu.Menu>\n          <br />\n          <Menu.Menu>\n            <Menu.Item style={{ paddingLeft: '0' }}>\n              <Button\n                icon\n                inverted\n                labelPosition='right'\n                onClick={logout}\n              >\n                <Icon name='sign-out alternate' />\n                LogOut\n              </Button>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Modal open={modal} size='small'  >\n          <Header icon='bullhorn' content='Add new Channel' />\n          <Modal.Content>\n            <Form>\n              <Form.Field>\n                <Input\n                  placeholder='Channel Name'\n                  name='channelName'\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n              <Form.Field>\n                <Input\n                  name='channelDescription'\n                  placeholder='Channel Description'\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form>\n            {\n              error && (\n                <Message error >\n                  <h4>Error</h4>\n                  {this.state.error}\n                </Message>\n              )\n            }\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color='red' inverted onClick={this.closeModal}>\n              <Icon name='remove' /> Cancel\n            </Button>\n            <Button color='green' inverted onClick={this.handleSubmit}>\n              <Icon name='checkmark' /> Add\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport { Segment, Header, Icon } from 'semantic-ui-react';\n\nexport class MessageHeader extends Component {\n  render() {\n    let { activeChannel } = this.props\n    console.log(\"messages header\", JSON.stringify(activeChannel));\n    return (\n      <Segment>\n        <Header as=\"h2\">\n          <Icon name=\"bullhorn\" />\n          <Header.Content>{ activeChannel.name[0].toUpperCase() + activeChannel.name.slice(1) }</Header.Content>\n          <Header.Subheader>\n            Description : <span>{activeChannel.description[0].toUpperCase() + activeChannel.description.slice(1)}</span>\n          </Header.Subheader>\n        </Header>\n      </Segment>\n    )\n  }\n}\n\nexport default MessageHeader\n","import React, { Component } from 'react'\nimport { Segment, Card } from 'semantic-ui-react';\nimport moment from 'moment'\n\nexport class MessagesBody extends Component {\n\n  componentDidMount(){\n    this.scrollDown()\n  }\n  \n  componentDidUpdate( a, b ){\n    this.scrollDown()\n  }\n\n  scrollDown(){\n    const { contaniner } = this.refs\n    contaniner.scrollTop = contaniner.scrollHeight\n  }\n\n  render() {\n    let { messages , user, typingUser } = this.props\n    return (\n      <Segment style={{ height: 'calc( 100vh - 56px - 147px)'}}>\n        <div ref='contaniner' style={{  height:'calc( 100vh - 56px - 147px - 35px)', overflowY: 'auto'}}>\n          <div style={{ minHeight: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'flex-end', padding: '.1em', paddingRight: '.5em' }}>\n            {\n              messages.length > 0 && (\n                messages.map( message => (\n                  <Card key={ message.id } fluid style={{ marginTop: '0px'}}>\n                    <Card.Content\n                      style={{ padding: '3px 10px' }} \n                      textAlign={ message.sender === user.nickname ? 'right' : 'left' }>\n                      <h3>{message.message}</h3>\n                      {message.sender[0].toUpperCase() + message.sender.slice(1)} Send @ { moment(message.timef).fromNow()}\n                    </Card.Content>\n                  </Card>\n                ))\n              )\n            }\n            { \n              typingUser && typingUser.map( name => (\n                <div key={name} className=\"typing-user\">\n\t\t\t\t\t\t\t\t\t{`${name[0].toUpperCase() + name.slice(1)} is typing . . .`}\n\t\t\t\t\t\t\t\t</div>\n              ))\n            }\n          </div>\n        </div>\n      </Segment>\n    )\n  }\n}\n\nexport default MessagesBody\n","import React, { Component } from 'react'\nimport { Segment, Form, Icon } from 'semantic-ui-react';\n\nexport class MessageInput extends Component {\n  state = {\n    msg: ''\n  }\n\n  handleChange = e => this.setState({ msg: e.target.value })\n\n  handleSubmit = () => {\n    this.props.sendMsg( this.state.msg )\n    this.setState({ msg: '' })\n  }\n\n  handleOnFocused = () => this.props.sendTyping( true )\n\n  handleOnBlur = () => this.props.sendTyping( false )\n\n  render() {\n    let { msg } = this.state \n    return (\n      <Segment>\n        <Form onSubmit={msg.length > 0 ? this.handleSubmit : null }>\n          <Form.Input\n            fluid\n            name='msg'\n            value={msg}\n            placeholder='Write your message'\n            onChange={this.handleChange}\n            onFocus = {this.handleOnFocused}\n            onBlur = {this.handleOnBlur}\n            icon={<Icon \n              name='send' \n              link \n              circular \n              inverted \n              onClick={ this.handleSubmit }\n              disabled = { msg.length < 1 } \n            />}\n          />\n        </Form>\n      </Segment>\n    )\n  }\n}\n\nexport default MessageInput\n","import React, { Component } from 'react'\nimport events from '../../events'\nimport { Grid } from 'semantic-ui-react'\nimport Sidebar from './Sidebar';\nimport MessageHeader from './MessageHeader'\nimport MessagesBody from './MessagesBody'\nimport MessageInput from './MessageInput'\n\n\nexport class ChatPage extends Component {\n\n  state = {\n    chats: [],\n    activeChannel: null\n  }\n\n  componentDidMount(){\n    let { socket } = this.props\n    socket.emit(events.INIT_CHATS, this.initChats )\n    socket.on( events.MESSAGE_SEND, this.addMessage )\n    socket.on( events.TYPING, this.addTyping )\n    socket.on( events.P_MESSAGE_SEND, this.addPMessage )\n    socket.on( events.P_TYPING, this.addPTyping)\n    socket.on( events.CREATE_CHANNEL, this.updateChats )\n  }\n\n  initChats =  _chats  => this.updateChats( _chats, true )\n\n  updateChats = ( _chats, init=false ) => {\n    let { chats } = this.state\n    let newChats = init ? [ ..._chats ] : [ ...chats, _chats ]\n    this.setState({ chats: newChats, activeChannel: init ? _chats[0] : this.state.activeChannel })\n  }\n\n  addTyping = ({ channel, isTyping, sender }) => {\n    let { user } = this.props\n    let { chats } = this.state\n    if( sender === user.nickname ) return\n    chats.map( chat => {\n      if( chat.name === channel ){\n        if( isTyping && !chat.typingUser.includes( sender )){\n          chat.typingUser.push( sender )\n        } else if( !isTyping && chat.typingUser.includes( sender )){\n          chat.typingUser = chat.typingUser.filter( u => u !== sender )\n        }\n      }\n      return null\n    })\n    this.setState({ chats })\n  }\n\n  addPTyping = ({ channel, isTyping }) => {\n    console.log( channel, isTyping )\n    let { pChats } = this.props\n    pChats.map( pChat => {\n      if( pChat.name === channel ){\n        pChat.isTyping = isTyping\n      }\n      return null\n    })\n    this.setState({ pChats })\n  }\n\n  addMessage = ({ channel, message }) => {\n    let { activeChannel, chats } = this.state\n\n    chats.map( chat => {\n      if( chat.name === channel ) {\n        chat.messages.push( message )\n        if ( activeChannel.name !== channel ) chat.msgCount ++\n      }\n      return null\n    })\n    this.setState({ chats })\n  }\n\n  addPMessage = ({ channel, message }) => {\n    let { activeChannel } = this.state\n    let { pChats } = this.props\n\n    pChats.map( pChat => {\n      if( pChat.name === channel ) {\n        pChat.messages.push( message )\n        if( activeChannel.name !== channel ) pChat.msgCount ++\n      }\n      return null\n    })\n    this.setState({ pChats })\n  }\n\n  sendMsg = msg => {\n    let { socket, users  } = this.props\n    let { activeChannel } = this.state\n    if( activeChannel.type ) {\n      let receiver = users[ activeChannel.name ]\n      socket.emit( events.P_MESSAGE_SEND, { receiver, msg })\n    } else {\n      socket.emit( events.MESSAGE_SEND, { channel: activeChannel.name, msg })\n    }\n\n  }\n\n  sendTyping = isTyping => {\n    let { socket, users } = this.props\n    let { activeChannel } = this.state\n    if( activeChannel.type ){\n      let receiver = users[ activeChannel.name ]\n      socket.emit( events.P_TYPING, { receiver: receiver.socketId, isTyping })\n    }\n    socket.emit( events.TYPING, { channel: activeChannel.name, isTyping })\n  }\n\n  setActiveChannel = name => {\n    let newActive = this.state.chats.filter( chat => chat.name === name )\n    newActive[0].msgCount = 0\n    this.setState({ activeChannel: newActive[0] })\n  }\n\n  setActivePChannel = name => {\n    let newActive = this.props.pChats.filter( pChat => pChat.name === name )\n    newActive[0].msgCount = 0\n    this.setState({ activeChannel: newActive[0] })\n  }\n\n  render() {\n    let { user, users, pChats, logout, socket } = this.props\n    let { activeChannel, chats } = this.state\n    return (\n      <Grid style={{ height: '100vh', margin: '0px'}}>\n        <Grid.Column computer={4} tablet={ 4 } mobile={6} style={{ background: '#1E1E1E', height: '100%'}}>\n          <Sidebar\n            user = { user }\n            users = { users }\n            chats = { chats }\n            socket = { socket }\n            activeChannel = { activeChannel }\n            logout = { logout }\n            setActivePChannel = { this.setActivePChannel }\n            setActiveChannel = { this.setActiveChannel }\n            pChats = { pChats }\n          />\n        </Grid.Column>\n        <Grid.Column computer={12} tablet={ 12 } mobile={10} style={{ background: '#eee', height: '100%'}}>\n        {\n          activeChannel && (\n            <React.Fragment>\n              <MessageHeader activeChannel= { activeChannel } />\n              <MessagesBody\n                messages = { activeChannel.messages }\n                user={ user }\n                typingUser = { activeChannel.typingUser } />\n              <MessageInput\n                sendMsg = { this.sendMsg }\n                sendTyping = { this.sendTyping } />\n            </React.Fragment>\n          )\n        }\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default ChatPage\n","import {useAuth0} from \"@auth0/auth0-react\";\nimport React from \"react\";\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0();\n\n    return (\n        <button\n        style={{\n    ...styles.appButtonContainer,\n            backgroundColor: '#F29947',\n    }}\n        onClick={() =>  loginWithRedirect()}\n        >\n        <div\n    style={{\n        justifyContent: 'space-between',\n            paddingHorizontal: 10,\n            paddingVertical: 10,\n            marginTop: '-10%',\n    }}\n>\n<p\n    style={{\n    ...styles.appButtonText,\n            color:  '#FFF6F6',\n            fontSize: 18,\n    }}\n> Login\n</p>\n</div>\n        </button>\n    );\n\n};\nconst styles = {\n    // ...\n    appButtonContainer: {\n        elevation: 8,\n        borderRadius: 14,\n        shadowColor: '#000', // IOS\n        shadowOffset: { height: 4, width: 0 }, // IOS\n        shadowOpacity: 0.3, // IOS\n        shadowRadius: 4.5, //IOS\n        padding: 16,\n        paddingVertical: 40,\n        margin: 20,\n    },\n\n    appButtonText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        justifyContent: 'center',\n        alignSelf: 'center',\n    },\n}\nexport default LoginButton;\n","import {useAuth0} from \"@auth0/auth0-react\";\nimport React from \"react\";\nconst LogoutButton = () => {\n    const { logout } = useAuth0();\n    return (\n        <button\n            style={{\n                ...styles.appButtonContainer,\n                backgroundColor: '#F29947',\n            }}\n            onClick={() => logout({ returnTo: window.location.origin })}\n        >\n            <div\n                style={{\n                    justifyContent: 'space-between',\n                    paddingHorizontal: 10,\n                    paddingVertical: 10,\n                    marginTop: '-10%',\n                }}\n            >\n                <p\n                    style={{\n                        ...styles.appButtonText,\n                        color:  '#FFF6F6',\n                        fontSize: 18,\n                    }}\n                > Logout\n                </p>\n            </div>\n        </button>\n    );\n\n};\nconst styles = {\n    // ...\n    appButtonContainer: {\n        elevation: 8,\n        borderRadius: 14,\n        shadowColor: '#000', // IOS\n        shadowOffset: { height: 4, width: 0 }, // IOS\n        shadowOpacity: 0.3, // IOS\n        shadowRadius: 4.5, //IOS\n        padding: 16,\n        paddingVertical: 40,\n        margin: 20,\n    },\n\n    appButtonText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        justifyContent: 'center',\n        alignSelf: 'center',\n    },\n}\n\n\nexport default LogoutButton;\n","import React from 'react';\n\nimport LoginButton from './LoginButton';\nimport LogoutButton from './LogoutButton';\n\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst AuthenticationButton = () => {\n    const {isAuthenticated } = useAuth0();\n\n    return isAuthenticated ? <LogoutButton /> : <LoginButton> </LoginButton>;\n};\n\nexport default AuthenticationButton;\n","import React, { Component } from 'react'\nimport event from  '../../events'\nimport {Grid, Header, Icon, Form, Message, Button} from 'semantic-ui-react';\nimport AuthenticationButton from \"./AuthenticationButton\";\nimport {useAuth0, withAuth0} from '@auth0/auth0-react';\n\nexport class LoginPage extends Component {\n\n\n  state = {\n    nickname: '',\n    error: ''\n  }\n\n\n  //isvalid = ({ nickname }) => nickname\n\n  setUser = ( { user, isUser} ) =>  {\n    if( isUser ) {\n      this.setState({ error: 'This user is already signed in'})\n    } else {\n      this.setState({ error : '' })\n      this.props.setUser( user )\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ nickname: e.target.value })\n  }\n\n\n  handleSubmit = async () => {\n    const {user} = await this.props.auth0;\n\n    this.setState({nickname: user.nickname})\n    console.log(\"handle submit\" + this.state);\n\n    let {socket} = this.props\n    let {nickname} = this.state\n\n\n    socket.emit(event.IS_USER, nickname, this.setUser);\n  }\n\n  render() {\n\n    return (\n\n      <Grid\n        style={{ height: '100vh', padding: '0px', margin: '0px' }}\n        textAlign='center'\n        verticalAlign='middle'\n      >\n        <Grid.Column computer={ 6 } tablet={ 8 } mobile={ 14 } >\n\n          <Header as='h2' icon textAlign='center' color='green'>\n            <Icon name='book' />\n            Staidr\n          </Header>\n          <AuthenticationButton>\n\n          </AuthenticationButton>\n          <Button onClick={this.handleSubmit}>Continue</Button>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default withAuth0(LoginPage)\n","import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport events from '../events'\nimport ChatPage from '../components/ChatsPage/ChatPage'\nimport LoginPage from '../components/LoginPage/LoginPage'\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\n// ***** it will used in dev mode\nconst socketUrl = 'http://localhost/'\n//const socketUrl = '/'\n\nexport class Main extends Component {\n    state = {\n        socket: null,\n        user: null,\n        users: {},\n        pChats: [],\n    }\n\n    componentDidMount() {\n        this.initSocket()\n    }\n\n    initSocket = () => {\n        let socket = io( socketUrl )\n        this.setState({ socket })\n        socket.on('connect', () => console.log( 'Connected'))\n        socket.on( events.LOGOUT, this.setUsers( false ))\n        socket.on( events.NEW_USER, this.setUsers( true ))\n    }\n\n    setUser = user => {\n        let { socket } = this.state\n        this.setState({ user })\n        socket.emit( events.NEW_USER, user )\n    }\n\n    setUsers = isNewUsers => ({ newUsers, outUser }) => {\n        let { user, pChats } = this.state\n        if( isNewUsers ){\n            let newPChats = [...pChats]\n            let oldPChats = pChats.map( pChat => pChat.name )\n            user && Object.keys( newUsers ).map( newUser => {\n                if( newUser !== user.nickname && !oldPChats.includes( newUser )){\n                    newPChats.push({\n                        name: newUser,\n                        description: 'direct message',\n                        messages: [],\n                        isTyping: false,\n                        msgCount: 0,\n                        type: 'Private'\n                    })\n                }\n                return null\n            })\n            this.setState({ users : newUsers, pChats: newPChats  })\n        } else {\n            let newPChats = pChats.filter( pChat => pChat.name !== outUser )\n            this.setState({ users: newUsers, pChats: newPChats })\n        }\n    }\n\n    logout = () => {\n        let { socket } = this.state\n        socket.emit( events.LOGOUT )\n        this.setState({ user: null })\n    }\n    render() {\n        let { user, users, pChats, socket } = this.state\n        console.log(\"main js\" + JSON.stringify(user, users,pChats,socket));\n        return (\n            user ?\n            <ChatPage\n                user = { user }\n                users = { users }\n                pChats = { pChats }\n                socket = { socket }\n                logout = { this.logout }\n            /> :\n            <LoginPage socket={socket} setUser={this.setUser} />\n        )\n    }\n}\n\nexport default Main\n","import React, { Component } from 'react';\nimport Main from './components/Main'\n\nclass App extends Component {\n  render() {\n    return (\n      <Main />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n    <Auth0Provider\n        domain=\"dev-ulxwc1q3.eu.auth0.com\"\n        clientId=\"lVZ8BO9u9dgnkAUKScoMpWoZqxRcaUFf\"\n        redirectUri={window.location.origin}\n    >\n        <App />\n\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}